#!/usr/bin/env ruby

$LOAD_PATH.unshift(File.expand_path(File.dirname(__FILE__)) + '/../lib/')

require 'rubygems'
require 'riven'
require 'riven/opt_parser'
require 'riven/wkhtmltopdf'
require 'riven/html_generator'

## Step 1: Check if wkhtmltopdf is set up correctly
Riven::Wkhtmltopdf.check_installation


## Step 2: Parse command line options
config = Riven::OptParser.get_config


## Step 3: Change dir if directory is given to ensure the image pathes work
unless config.dir_given === false
  working_dir = Dir.pwd
  Dir.chdir config.dir_given
end


## Step 4: Generate HTML for cover
unless config.cover_file === ''
  cover_markup = Riven::MarkupFile.read_cover(config.cover_file)
end
cover_generator = Riven::HTMLGenerator.new('_riven_cover_tmp_file.html', cover_markup || '', config)


## Step 5: Generate HTML for main document
markup = Riven::MarkupFile.read_all(config.files, config.cover_file)
generator = Riven::HTMLGenerator.new('_riven_tmp_file.html', markup, config)


## Step 6: Determine PDF file name
output_file = config.pdf_output_file

if output_file.empty?
  unless config.dir_given === false
    output_file = config.dir_given + '.pdf'
  else
    puts "No output file name given. Please specify output file name via -o param."
    generator.close!
    cover_generator.close!
    exit
  end
end

puts "Output file: #{output_file}" if config.dir_given


## Step 7: Generate the PDF file from HTML file
output = Riven::Wkhtmltopdf.generate_pdf(generator.html_file, cover_generator.html_file, output_file, config)
puts output if config.verbose


## Step 8: Close the generators
generator.close!
cover_generator.close!


## Step 9: Dump the HTML code if requested
puts generator.html if config.dump_html
puts cover_generator.html if config.dump_cover_html


## Step 10: If we changed the directory before, the PDF file is now located in the wrong directory,
## so wie have to move it
unless config.dir_given === false
  require 'fileutils'
  FileUtils.mv output_file, working_dir + '/' + output_file
end